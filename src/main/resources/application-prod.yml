# Production Environment Configuration
spring:
  application:
    name: bookora

  # Database Configuration (Production)
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/bookora}
    username: ${DB_USERNAME:bookora}
    password: ${DB_PASSWORD:bookora}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  # JPA/Hibernate Configuration (Production)
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        default_schema: public
        format_sql: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        generate_statistics: false
    open-in-view: false

  # Flyway Configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    baseline-version: 0

  # Security
  security:
    filter:
      order: 10

  # Mail Configuration (Production SMTP)
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

# Server Configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false
  shutdown: graceful

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  health:
    defaults:
      enabled: true

# Logging Configuration (Production)
logging:
  level:
    root: WARN
    fi.unfinitas.bookora: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: OFF
    org.hibernate.type: OFF
    org.springframework.transaction: WARN
  pattern:
    console: "%d{ISO8601} [%X{correlationId}] %-5level [%t] %c{1} - %m%n"
    file: "%d{ISO8601} [%X{correlationId}] %-5level [%t] %c - %m%n"
  file:
    name: logs/bookora.log
  logback:
    rollingpolicy:
      clean-history-on-start: false
      total-size-cap: 3GB
      max-file-size: 100MB
      max-history: 30

# Springdoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: false  # Disable Swagger UI in production
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: false

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}  # MUST be set via environment variable in production
  expiration: 86400000 # 24 hours in milliseconds
  refresh-expiration: 604800000 # 7 days in milliseconds

# Bookora Application Configuration (Production)
bookora:
  frontend-url: ${FRONTEND_URL:https://bookora.fi}
  email:
    from: ${EMAIL_FROM:noreply@bookora.fi}
    enabled: true
